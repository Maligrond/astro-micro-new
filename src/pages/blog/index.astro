---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const data = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
  [year: string]: CollectionEntry<"blog">[];
};

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));

const allTags = Array.from(new Set(data.flatMap((post) => post.data.tags || []))).sort();
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <div class="grid grid-cols-1 md:grid-cols-[2fr_1fr] gap-8 md:gap-12">
      <aside data-pagefind-ignore>
        <div class="space-y-10">
          <div class="space-y-4">
            {
              years.map((year) => (
                <section class="animate space-y-4">
                  <div class="font-semibold text-black dark:text-white">
                    {year}
                  </div>
                  <div>
                    <ul class="not-prose flex flex-col gap-4">
                      {posts[year].map((post) => (
                        <li>
                          <ArrowCard entry={post} />
                        </li>
                      ))}
                    </ul>
                  </div>
                </section>
              ))
            }
          </div>
        </div>
      </aside>
      <aside class="mt-8 md:mt-0 md:border-l md:border-gray-200 md:dark:border-neutral-800 md:pl-8">
        <div>
          <div class="mb-2 text-gray-500 dark:text-gray-400 text-base">Теги</div>
          <div class="flex flex-wrap gap-2">
            {allTags.map((tag) => (
              <a
                href={`/tags/${tag}`}
                class="inline-block rounded-full bg-gray-200 dark:bg-neutral-800 px-3 py-1 text-xs text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-neutral-700 transition-colors duration-200"
                style="font-weight: normal; border: none;"
              >
                #{tag}
              </a>
            ))}
          </div>
          <div class="mt-3">
            <a href="/tags" class="text-xs text-gray-500 dark:text-gray-400 hover:underline">Смотреть все &rarr;</a>
          </div>
        </div>
      </aside>
    </div>
  </Container>
</Layout>
